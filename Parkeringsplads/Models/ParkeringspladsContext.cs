// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Parkeringsplads.Models;


public partial class ParkeringspladsContext : DbContext
{
    public ParkeringspladsContext(DbContextOptions<ParkeringspladsContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Address> Address { get; set; }

    public virtual DbSet<Car> Car { get; set; }

    public virtual DbSet<City> City { get; set; }

    public virtual DbSet<Driver> Driver { get; set; }

    public virtual DbSet<Request> Request { get; set; }

    public virtual DbSet<School> School { get; set; }

    public virtual DbSet<Trip> Trip { get; set; }

    public virtual DbSet<User> User { get; set; }

    public virtual DbSet<UserAddress> UserAddress { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {

        // Defining the composite primary key for UserAddress
        modelBuilder.Entity<UserAddress>()
            .HasKey(ua => new { ua.User_Id, ua.Address_Id });

        // Configuring the relationship between User and UserAddress
        modelBuilder.Entity<UserAddress>()
            .HasOne(ua => ua.User)
            .WithMany(u => u.UserAddresses)
            .HasForeignKey(ua => ua.User_Id)
            .OnDelete(DeleteBehavior.ClientSetNull);  // Configure delete behavior

        // Configuring the relationship between Address and UserAddress
        modelBuilder.Entity<UserAddress>()
            .HasOne(ua => ua.Address)
            .WithMany(a => a.UserAddresses)
            .HasForeignKey(ua => ua.Address_Id)
            .OnDelete(DeleteBehavior.ClientSetNull);  // Configure delete behavior


        modelBuilder.Entity<School>()
    .HasOne(s => s.Address)   // A School has one Address
    .WithMany(a => a.Schools)  // Address can have many Schools
    .HasForeignKey(s => s.AddressId)
    .OnDelete(DeleteBehavior.ClientSetNull); // Handle delete behavior


        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}